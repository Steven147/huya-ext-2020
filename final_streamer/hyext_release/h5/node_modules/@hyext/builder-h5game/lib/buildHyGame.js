const os = require('os')
const path = require('path')
const fs = require('fs-extra')
const ora = require('ora')
const { spawn } = require('child_process')
const { getHygName, HINT, ERROR } = require('../utils/utils.js')

const GRADLE_FILE_NAME = os.platform() === 'win32' ? 'gradlew.bat' : 'gradlew'
const GRADLE_BIN = path.resolve(__dirname, '../bin', GRADLE_FILE_NAME)
const GRADLE_BUILD_FILE = path.resolve(__dirname, '../bin', 'build.gradle')

function buildHyGame({ extUuid, extVersion, extVersionId, mainEntryDir, outputDir }) {
  HINT('\nHYEXT-H5Game: 构建 hyg')

  return new Promise((resolve, reject) => {
    const gradleProcess = spawn(
      GRADLE_BIN,
      [
        '--build-file',
        GRADLE_BUILD_FILE,
        'hygamebuild',
        `-PextUuid=${extUuid}`,
        `-PextVersionId=${extVersionId}`,
        `-PextVersion=${extVersion}`,
        `-PsourceDir=${mainEntryDir}`,
        `-PtargetDir=${outputDir}`,
      ],
      {
        stdio: ['ignore', 'ignore', 'inherit'],
      },
    )

    // 这个文件名称是 gradle 插件写死的
    // const hygFileName = getHygName({ extUuid, extVersionId })
    const HYG_FILE_NAME = `${extUuid}-${extVersionId}.hyg`
    const HYG_MD5_FILE_NAME = `${extUuid}-${extVersionId}.md5`

    gradleProcess.on('close', code => {
      if (code === 0) {
        HINT('HYEXT-H5Game: 构建 hyg[done]')

        const hygPath = path.resolve(outputDir, HYG_FILE_NAME)
        const newHygName = getHygName({ extUuid })
        const newHygPath = path.resolve(outputDir, newHygName)

        fs.moveSync(hygPath, newHygPath)

        const stats = fs.statSync(newHygPath)
        const hygMd5 = fs.readFileSync(path.resolve(outputDir, HYG_MD5_FILE_NAME), { encoding: 'utf8' }).toString()

        resolve({
          hygName: newHygName,
          hygSize: stats.size,
          hygMd5,
        })

        return
      }

      ERROR('HYEXT-H5Game: 构建 hyg[failed]')
      reject(new Error('HYEXT-H5Game: 构建 hyg[failed]'))
    })
  }).catch(err => {
    console.error(err)
    throw new Error('HYEXT-H5Game: 构建 hyg[failed]')
  })

}

module.exports = {
  buildHyGame,
}
