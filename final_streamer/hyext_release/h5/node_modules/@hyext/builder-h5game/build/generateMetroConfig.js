const fs = require('fs-extra')
const os = require('os')
const rimraf = require('rimraf')
const path = require('path')
const Handlebars = require('handlebars')
const constants = require('../constants.js')

const TEMPLATE_DIR = path.resolve(__dirname, '..', 'template')
const TEMP_DIR = path.resolve(constants.builderTempDir, 'metro_config')

const getConfigName = ({ extUuid, configType }) => {
  return `${extUuid}_${Date.now()}_${configType}.js`
}

function removeMetroConfig(configAbs) {
  const fileName = path.basename(configAbs)
  const dirName = path.dirname(configAbs)

  const blobName = path.resolve(dirName, fileName.replace(/_(base|hyui)\.js$/ig, '_*.js'))
  // console.log('删除临时配置文件', blobName)
  rimraf.sync(blobName)
}

const getRawPath = filePath => (os.platform() === 'win32' ? filePath.replace(/\\/g, '\\\\') : filePath)

function generateMetroConfig({ extUuid, projectDir, isBuildingStremerBundle, publicPath, isUseHyCssLoader = false }) {
  const baseConfigAbs = path.resolve(TEMP_DIR, getConfigName({ extUuid, configType: 'base' }))
  const hycssConfigAbs = path.resolve(TEMP_DIR, getConfigName({ extUuid, configType: 'hyui' }))

  const baseTemplate = fs.readFileSync(path.resolve(TEMPLATE_DIR, 'basemetro.config.js')).toString()
  const baseContext = {
    BUILDER_NEORN_ENV_projectDir: getRawPath(projectDir),
    BUILDER_NEORN_ENV_isBuildingStreamerBundle: isBuildingStremerBundle,
    BUILDER_NEORN_ENV_imageBaseURI: publicPath,
  }

  const baseConfigContent = Handlebars.compile(baseTemplate)(baseContext)
  // console.log(baseConfigContent)
  fs.outputFileSync(baseConfigAbs, baseConfigContent)

  if (!isUseHyCssLoader) {
    return baseConfigAbs
  }

  const hycssTemplate = fs.readFileSync(path.resolve(TEMPLATE_DIR, 'hycssmetro.config.js')).toString()
  const hycssContext = {
    BUILDER_NEORN_ENV_projectDir: getRawPath(projectDir),
    BUILDER_NEORN_ENV_baseConfigAbs: getRawPath(baseConfigAbs),
  }

  const hycssConfigContent = Handlebars.compile(hycssTemplate)(hycssContext)
  // console.log(hycssConfigContent)
  fs.outputFileSync(hycssConfigAbs, hycssConfigContent)
  return hycssConfigAbs
}

module.exports = {
  generateMetroConfig,
  removeMetroConfig,
}
