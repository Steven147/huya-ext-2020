const os = require('os')
const R = require('ramda')
const chalk = require('chalk')

function ERROR(text) {
  console.log(chalk.red(text))
}
function HINT(text) {
  console.log(chalk.green(text))
}
function INFO(text) {
  console.log(chalk.gray(text))
}

function getPublicIP() {
  const ifaces = os.networkInterfaces()
  const addresses = R.flatten(R.values(ifaces))
  const address = R.filter(
    iface => iface.family === 'IPv4' && !/^127\./.test(iface.address),
    addresses,
  )

  return R.defaultTo(
    '127.0.0.1',
    R.compose(
      R.prop('address'),
      R.head,
    )(address),
  )
}

function getHygName({ extUuid, extVersionId }) {
  // return `${extUuid}-${extVersionId}.hyg`
  return `${extUuid}.hyg`
}

function simpleThrottle(fn, timeout) {
  let timer = null

  return args => {
    clearTimeout(timer)
    timer = setTimeout(() => {
      fn(args)
    }, timeout)
  }
}

module.exports = {
  getHygName,
  getPublicIP,
  ERROR,
  HINT,
  INFO,
  simpleThrottle,
}
