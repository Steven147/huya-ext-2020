#!/usr/bin/env node

// const commander = require('commander')
const fs = require('fs-extra')
const inquirer = require('inquirer')
const path = require('path')
const chalk = require('chalk')

const ROOT = process.cwd()
const CFG_PATH = path.resolve(ROOT, 'project.config.json')
const ORIGIN_CFG = require(CFG_PATH)

const { buildTypesMap, extTypes, } = require('../constants')


const filterType = ({ platform, role, checkedType, indentSpaces = 0 }) => extTypes.filter(item => item.platform === platform && item.role === role).map(item => ({
  name: `${' '.repeat(indentSpaces)}${item.name}`,
  value: item.extType,
  short: item.longName,
  checked: item.extType === checkedType,
}))

async function main() {
  // const program = new commander.Command(packageJson.name)
    // .usage('config')
    // .parse(process.argv)

  // const projectCfg = readProjectConfig()
  const builder = require(path.resolve(process.cwd(), 'node_modules', ORIGIN_CFG.builder.name))

  if (typeof builder.config !== 'function') {
    console.log(
      chalk.red(`该项目的 builder 暂时不支持配置终端类型.`)
    )
    process.exit(1)
  }


  const buildTypes = await inquirer.prompt([
    {
      type: 'checkbox',
      message: '请选择开发的终端类型(可多选)\n类型说明:https://dev.huya.com/docs#/extTypeIntro/list\n',
      name: 'buildTypes',
      choices: [
        new inquirer.Separator('\nPC主播端'),
        ...filterType({
          platform: 'pc',
          role: 'streamer',
        }),
        new inquirer.Separator('\n虎牙助手'),
        ...filterType({
          platform: 'app',
          role: 'streamer',
        }),

        new inquirer.Separator('\nPC观众端'),
        ...filterType({
          platform: 'pc',
          role: 'audience',
        }),
        new inquirer.Separator('\n虎牙主站'),
        ...filterType({
          platform: 'web',
          role: 'audience',
          checkedType: 'web_video_com',
        }),
        new inquirer.Separator('\n虎牙APP'),
        ...filterType({
          platform: 'app',
          role: 'audience',
        }),
      ],
      validate: answer => answer.length < 1 ? '请至少选择一个终端类型' : true,
      pageSize: 100,
    }
  ]).then(answer => {
    return answer.buildTypes.map(extType => {
      const target = extTypes.find(item => item.extType === extType)
      return {
        extType: target.extType,
        platform: target.platform,
      }
    })
  })

  const cfgPath = path.resolve(ROOT, 'project.config.json')

  const { config } = await builder.config({
    contextPath: ROOT,
    projectName: ORIGIN_CFG.name,
    builderConfig: ORIGIN_CFG.builder,
    buildTypes,
  })


  ORIGIN_CFG.builder = config

  fs.outputJsonSync(cfgPath, ORIGIN_CFG, { spaces: 2 })

  console.log(chalk.green('项目配置已更新'))
}

main()
