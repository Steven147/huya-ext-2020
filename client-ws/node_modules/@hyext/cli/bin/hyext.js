#!/usr/bin/env node

'use strict';

const path = require('path');
const fs = require('fs-extra')
var chalk = require('chalk');

var currentNodeVersion = process.versions.node;
var semver = currentNodeVersion.split('.');
var major = semver[0];

if (major < 8) {
  console.error(
    chalk.red(
      'You are running Node ' +
      currentNodeVersion +
      '.\n' +
      'Create Huya Ext App requires Node 8 or higher. \n' +
      'Please update your version of Node.'
    )
  )

  process.exit(1)
}

const pkg = require('../package.json');

const program = require('commander');

program.version(pkg.version, '-v, --version')
  .usage('<command> [options]')
  .command('init', '创建项目')
  .command('start', '开始开发')
  .command('build', 'build source code (Beta)')
  .command('release', '打包源码')
  .command('config', '更改小程序的构建终端')
  .command('builder', 'manage the project builder')
  .command('run', `'${pkg.name} run' is deprecated - use '${pkg.name} start' instead`)
  .parse(process.argv);

const configFile = path.resolve(process.cwd(), 'project.config.json')
if (fs.existsSync(configFile)) {
  const configFileContent = fs.readJSONSync(configFile)
  const isOldRnProject = configFileContent['sdkVersion'] || configFileContent['streamerSdkVersion']

  //转换老 RN 项目到支持自定义依赖的新项目结构
  if (isOldRnProject) {
    console.log(`Transforming project to support 3rd party dependencies...`)

    const sdkVersion = configFileContent['sdkVersion']
    const streamerSdkVersion = configFileContent['streamerSdkVersion']

    const dependencies = {}
    typeof sdkVersion === 'string' && (dependencies['hyext-rn-sdk'] = sdkVersion)
    typeof streamerSdkVersion === 'string' && (dependencies['hyliveext-rn-sdk'] = streamerSdkVersion)
    fs.writeFileSync(
      path.resolve(process.cwd(), 'package.json'),
      JSON.stringify({ dependencies: dependencies }, null, 2)
    )

    delete configFileContent['sdkVersion']
    delete configFileContent['streamerSdkVersion']
    fs.writeFileSync(configFile, JSON.stringify(configFileContent, null, 2))
  }
}
